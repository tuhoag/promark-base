version: '2'

services:
    orderer-base:
        image: hyperledger/fabric-orderer:$IMAGE_TAG
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: orderer
        environment:
            - FABRIC_LOGGING_SPEC=${FABRIC_LOG}
            - ORDERER_GENERAL_LISTENADDRESS=orderer.${PROJECT_NAME}.com
            # - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
            - ORDERER_GENERAL_LOCALMSPID=ordererMSP
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
            # enabled TLS
            - ORDERER_GENERAL_TLS_ENABLED=true
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
            - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
            - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
            - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]


    peer-base:
        image: hyperledger/fabric-peer:$IMAGE_TAG
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        command: peer node start
        environment:
            # Generic peer variables
            - FABRIC_LOGGING_SPEC=${FABRIC_LOG}
            # - GODEBUG=netdns=go
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_CHAINCODE_LOGGING_LEVEL=${FABRIC_LOG}
            - CORE_CHAINCODE_LOGGING_SHIM=${FABRIC_LOG}

            # the following setting starts chaincode containers on the same
            # bridge network as the peers
            # https://docs.docker.com/compose/networking/
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_test

            # TLS
            - CORE_PEER_TLS_ENABLED=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt

        volumes:
            - /var/run/docker.sock:/host/var/run/docker.sock
            - ../config/core.yaml:/etc/hyperledger/fabric/core.yaml
            - ../organizations:/organizations